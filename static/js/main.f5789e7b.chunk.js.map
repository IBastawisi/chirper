{"version":3,"sources":["utils/_DATA.js","utils/api.js","slices/app.ts","slices/tweets.ts","slices/users.ts","slices/index.ts","utils/helpers.js","components/Tweet.tsx","components/Dashboard.tsx","components/NewTweet.tsx","components/Navbar.tsx","components/TweetPage.tsx","components/App.tsx","store.ts","serviceWorker.ts","index.tsx"],"names":["users","sarah_edo","id","name","avatarURL","tweets","tylermcginnis","dan_abramov","text","author","timestamp","likes","replies","replyingTo","_saveTweet","Promise","res","rej","formattedTweet","Math","random","toString","substring","Date","now","formatTweet","setTimeout","concat","saveLikeToggle","info","hasLiked","authedUser","filter","uid","_saveLikeToggle","saveTweet","loadAsync","createAsyncThunk","_","thunkAPI","a","dispatch","showLoading","all","then","response","hideLoading","appSlice","createSlice","initialState","loading","reducers","setAuthedUser","state","action","payload","extraReducers","builder","addCase","pending","fulfilled","tweetsSlice","load","toggleLike","tweet","u","push","add","toggleLikeAsync","actions","catch","e","addTweetAsync","usersSlice","app","reducer","loadingBar","loadingBarReducer","formatDate","d","time","toLocaleTimeString","substr","slice","toLocaleDateString","Tweet","useDispatch","history","useHistory","useSelector","tweetAuthor","parentTweet","avatar","length","includes","parent","className","to","src","alt","onClick","preventDefault","toParent","stroke","fill","version","baseProfile","viewBox","height","width","xmlns","Dashboard","tweetIds","Object","keys","sort","b","map","NewTweet","useState","setText","useParams","handleSubmit","tweetLeft","onSubmit","placeholder","value","onChange","target","maxLength","autoFocus","type","disabled","Navbar","exact","activeClassName","TweetPage","replyId","App","useEffect","path","component","store","configureStore","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","console","message"],"mappings":"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","file":"static/js/main.f5789e7b.chunk.js","sourcesContent":["let users = {\n  sarah_edo: {\n    id: \"sarah_edo\",\n    name: \"Sarah Drasner\",\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/sarah.jpg\",\n    tweets: ['8xf0y6ziyjabvozdd253nd', 'hbsc73kzqi75rg7v1e0i6a', '2mb6re13q842wu8n106bhk', '6h5ims9iks66d4m7kqizmv', '3sklxkf9yyfowrf0o1ftbb'],\n  },\n  tylermcginnis: {\n    id: \"tylermcginnis\",\n    name: \"Tyler McGinnis\",\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/tyler.jpg\",\n    tweets: ['5c9qojr2d1738zlx09afby', 'f4xzgapq7mu783k9t02ghx', 'nnvkjqoevs8t02lzcc0ky', '4pt0px8l0l9g6y69ylivti', 'fap8sdxppna8oabnxljzcv', 'leqp4lzfox7cqvsgdj0e7', '26p5pskqi88i58qmza2gid', 'xi3ca2jcfvpa0i3t4m7ag'],\n  },\n  dan_abramov: {\n    id: \"dan_abramov\",\n    name: \"Dan Abramov\",\n    avatarURL: \"https://tylermcginnis.com/would-you-rather/dan.jpg\",\n    tweets: ['5w6k1n34dkp1x29cuzn2zn', 'czpa59mg577x1oo45cup0d', 'omdbjl68fxact38hk7ypy6', '3km0v4hf1ps92ajf4z2ytg', 'njv20mq7jsxa6bgsqc97', 'sfljgka8pfddbcer8nuxv', 'r0xu2v1qrxa6ygtvf2rkjw'],\n  }\n}\n\nlet tweets = {\n  \"8xf0y6ziyjabvozdd253nd\": {\n    id: \"8xf0y6ziyjabvozdd253nd\",\n    text: \"Shoutout to all the speakers I know for whom English is not a first language, but can STILL explain a concept well. It's hard enough to give a good talk in your mother tongue!\",\n    author: \"sarah_edo\",\n    timestamp: 1518122597860,\n    likes: ['tylermcginnis'],\n    replies: ['fap8sdxppna8oabnxljzcv', '3km0v4hf1ps92ajf4z2ytg'],\n    replyingTo: null,\n  },\n  \"5c9qojr2d1738zlx09afby\": {\n    id: \"5c9qojr2d1738zlx09afby\",\n    text: \"I hope one day the propTypes pendulum swings back. Such a simple yet effective API. Was one of my favorite parts of React.\",\n    author: \"tylermcginnis\",\n    timestamp: 1518043995650,\n    likes: ['sarah_edo', 'dan_abramov'],\n    replies: ['njv20mq7jsxa6bgsqc97'],\n    replyingTo: null,\n  },\n  \"f4xzgapq7mu783k9t02ghx\": {\n    id: \"f4xzgapq7mu783k9t02ghx\",\n    text: \"Want to work at Facebook/Google/:BigCompany? Start contributing code long before you ever interview there.\",\n    author: \"tylermcginnis\",\n    timestamp: 1517043995650,\n    likes: ['dan_abramov'],\n    replies: [],\n    replyingTo: null,\n  },\n  \"hbsc73kzqi75rg7v1e0i6a\": {\n    id: \"hbsc73kzqi75rg7v1e0i6a\",\n    text: \"Puppies 101: buy a hamper with a lid on it.\",\n    author: \"sarah_edo\",\n    timestamp: 1516043995650,\n    likes: ['tylermcginnis'],\n    replies: ['leqp4lzfox7cqvsgdj0e7', 'sfljgka8pfddbcer8nuxv'],\n    replyingTo: null,\n  },\n  \"5w6k1n34dkp1x29cuzn2zn\": {\n    id: \"5w6k1n34dkp1x29cuzn2zn\",\n    text: \"Is there a metric like code coverage, but that shows lines that, if changed (in a syntactically correct way), wouldn’t cause tests to fail?\",\n    author: \"dan_abramov\",\n    timestamp: 1515043995650,\n    likes: ['sarah_edo'],\n    replies: [],\n    replyingTo: null,\n  },\n  \"czpa59mg577x1oo45cup0d\": {\n    id: \"czpa59mg577x1oo45cup0d\",\n    text: \"React came out 'rethinking best practices'. It has since accumulated 'best practices' of its own. Let’s see if we can do better.\",\n    author: \"dan_abramov\",\n    timestamp: 1515043995650,\n    likes: ['tylermcginnis', 'sarah_edo'],\n    replies: ['3sklxkf9yyfowrf0o1ftbb'],\n    replyingTo: null,\n  },\n  \"2mb6re13q842wu8n106bhk\": {\n    id: \"2mb6re13q842wu8n106bhk\",\n    text: \"I think I realized I like dogs so much because I can really relate to being motivated by snacks\",\n    author: \"sarah_edo\",\n    timestamp: 1514043995650,\n    likes: ['dan_abramov'],\n    replies: ['26p5pskqi88i58qmza2gid'],\n    replyingTo: null,\n  },\n  \"nnvkjqoevs8t02lzcc0ky\": {\n    id: \"nnvkjqoevs8t02lzcc0ky\",\n    text: \"Maybe the real benefit of open source was the friendships we made along the way?\",\n    author: \"tylermcginnis\",\n    timestamp: 1513043995650,\n    likes: [],\n    replies: [],\n    replyingTo: null,\n  },\n  \"omdbjl68fxact38hk7ypy6\": {\n    id: \"omdbjl68fxact38hk7ypy6\",\n    text: \"A 7-minute Paul Joseph Watson video being translated and aired by a Russian state TV channel is the most surreal thing I’ve seen in 2018 yet\",\n    author: \"dan_abramov\",\n    timestamp: 1512043995650,\n    likes: [],\n    replies: [],\n    replyingTo: null,\n  },\n  \"4pt0px8l0l9g6y69ylivti\": {\n    id: \"4pt0px8l0l9g6y69ylivti\",\n    text: \"Talking less about the downsides of OSS and focusing on some of the huge potential upsides for once might just help get more people into it.\",\n    author: \"tylermcginnis\",\n    timestamp: 1511043995650,\n    likes: ['dan_abramov'],\n    replies: [],\n    replyingTo: null,\n  },\n  \"6h5ims9iks66d4m7kqizmv\": {\n    id: \"6h5ims9iks66d4m7kqizmv\",\n    text: \"By the way, if you have a blog post sitting around and want to get some eyes on it, we take guest submissions! That's how I started.\",\n    author: \"sarah_edo\",\n    timestamp: 1510043995650,\n    likes: ['dan_abramov', 'tylermcginnis'],\n    replies: ['xi3ca2jcfvpa0i3t4m7ag', 'r0xu2v1qrxa6ygtvf2rkjw'],\n    replyingTo: null,\n  },\n  \"fap8sdxppna8oabnxljzcv\": {\n    id: \"fap8sdxppna8oabnxljzcv\",\n    author: \"tylermcginnis\",\n    text: \"I agree. I'm always really impressed when I see someone giving a talk in a language that's not their own.\",\n    timestamp: 1518122677860,\n    likes: ['sarah_edo'],\n    replyingTo: \"8xf0y6ziyjabvozdd253nd\",\n    replies: [],\n  },\n  \"3km0v4hf1ps92ajf4z2ytg\": {\n    id: \"3km0v4hf1ps92ajf4z2ytg\",\n    author: \"dan_abramov\",\n    text: \"It can be difficult at times.\",\n    timestamp: 1518122667860,\n    likes: [],\n    replyingTo: \"8xf0y6ziyjabvozdd253nd\",\n    replies: [],\n  },\n  \"njv20mq7jsxa6bgsqc97\": {\n    id: \"njv20mq7jsxa6bgsqc97\",\n    author: \"dan_abramov\",\n    text: \"Sometimes you have to sacrifice simplicity for power.\",\n    timestamp: 1518044095650,\n    likes: ['tylermcginnis'],\n    replyingTo: \"5c9qojr2d1738zlx09afby\",\n    replies: [],\n  },\n  \"leqp4lzfox7cqvsgdj0e7\": {\n    id: \"leqp4lzfox7cqvsgdj0e7\",\n    author: \"tylermcginnis\",\n    text: \"Also trashcans. Learned this the hard way.\",\n    timestamp: 1516043255650,\n    likes: [],\n    replyingTo: \"hbsc73kzqi75rg7v1e0i6a\",\n    replies: [],\n  },\n  \"sfljgka8pfddbcer8nuxv\": {\n    id: \"sfljgka8pfddbcer8nuxv\",\n    author: \"dan_abramov\",\n    text: \"Puppies are the best.\",\n    timestamp: 1516045995650,\n    likes: ['sarah_edo', 'tylermcginnis'],\n    replyingTo: \"hbsc73kzqi75rg7v1e0i6a\",\n    replies: [],\n  },\n  \"3sklxkf9yyfowrf0o1ftbb\": {\n    id: \"3sklxkf9yyfowrf0o1ftbb\",\n    author: \"sarah_edo\",\n    text: \"The idea of best practices being a negative thing is an interesting concept.\",\n    timestamp: 1515044095650,\n    likes: ['dan_abramov'],\n    replyingTo: \"czpa59mg577x1oo45cup0d\",\n    replies: [],\n  },\n  \"26p5pskqi88i58qmza2gid\": {\n    id: \"26p5pskqi88i58qmza2gid\",\n    author: \"tylermcginnis\",\n    text: \"Too relatable\",\n    timestamp: 1514044994650,\n    likes: ['sarah_edo'],\n    replyingTo: \"2mb6re13q842wu8n106bhk\",\n    replies: [],\n  },\n  \"xi3ca2jcfvpa0i3t4m7ag\": {\n    id: \"xi3ca2jcfvpa0i3t4m7ag\",\n    author: \"tylermcginnis\",\n    text: \"Just DMd you!\",\n    timestamp: 1510043995650,\n    likes: [],\n    replyingTo: \"6h5ims9iks66d4m7kqizmv\",\n    replies: [],\n  },\n  \"r0xu2v1qrxa6ygtvf2rkjw\": {\n    id: \"r0xu2v1qrxa6ygtvf2rkjw\",\n    author: \"dan_abramov\",\n    text: \"This is a great idea.\",\n    timestamp: 1510044395650,\n    likes: ['tylermcginnis'],\n    replyingTo: \"6h5ims9iks66d4m7kqizmv\",\n    replies: [],\n  },\n}\n\nexport function _getUsers () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...users}), 1000)\n  })\n}\n\nexport function _getTweets () {\n  return new Promise((res, rej) => {\n    setTimeout(() => res({...tweets}), 1000)\n  })\n}\n\nexport function _saveLikeToggle ({ id, hasLiked, authedUser }) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      tweets = {\n        ...tweets,\n        [id]: {\n          ...tweets[id],\n          likes: hasLiked === true\n            ? tweets[id].likes.filter((uid) => uid !== authedUser)\n            : tweets[id].likes.concat([authedUser])\n        }\n      }\n\n      res()\n    }, 500)\n  })\n}\n\nfunction generateUID () {\n  return Math.random().toString(36).substring(2, 15) + Math.random().toString(36).substring(2, 15)\n}\n\nfunction formatTweet ({ author, text, replyingTo = null }) {\n  return {\n    author,\n    id: generateUID(),\n    likes: [],\n    replies: [],\n    text,\n    timestamp: Date.now(),\n    replyingTo,\n  }\n}\n\nexport function _saveTweet ({ text, author, replyingTo }) {\n  return new Promise((res, rej) => {\n    const formattedTweet = formatTweet({\n      text,\n      author,\n      replyingTo\n    })\n\n    setTimeout(() => {\n      tweets = {\n        ...tweets,\n        [formattedTweet.id]: formattedTweet,\n      }\n\n      users = {\n        ...users,\n        [author]: {\n          ...users[author],\n          tweets: users[author].tweets.concat([formattedTweet.id])\n        }\n      }\n\n      res(formattedTweet)\n    }, 1000)\n  })\n}\n","import {\n  _getUsers,\n  _getTweets,\n  _saveLikeToggle,\n  _saveTweet,\n} from './_DATA.js'\n\nexport function getInitialData () {\n  return Promise.all([\n    _getUsers(),\n    _getTweets(),\n  ]).then(([users, tweets]) => ({\n    users,\n    tweets,\n  }))\n}\n\nexport function saveLikeToggle (info) {\n  return _saveLikeToggle(info)\n}\n\nexport function saveTweet (info) {\n  return _saveTweet(info)\n}","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { hideLoading, showLoading } from 'react-redux-loading-bar';\nimport { getInitialData } from '../utils/api';\n\nexport interface AppState {\n  authedUser: string | null;\n  loading: boolean;\n}\n\nconst initialState: AppState = {\n  authedUser: null,\n  loading: true,\n};\n\nconst AUTHED_ID = 'tylermcginnis'\n\nexport const loadAsync = createAsyncThunk('app/load', async (_, thunkAPI) => {\n  thunkAPI.dispatch(showLoading())\n  const response = await getInitialData();\n  thunkAPI.dispatch(hideLoading())\n  return response;\n});\n\nexport const appSlice = createSlice({\n  name: 'app',\n  initialState,\n  reducers: {\n    setAuthedUser: (state, action: PayloadAction<string>) => {\n      state.authedUser = action.payload\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      .addCase(loadAsync.pending, (state) => {\n        state.loading = true;\n      })\n      .addCase(loadAsync.fulfilled, (state, action) => {\n        state.loading = false;\n        state.authedUser = AUTHED_ID;\n      });\n  },\n});\n\nexport default appSlice.reducer;\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { showLoading, hideLoading } from 'react-redux-loading-bar';\nimport { saveLikeToggle, saveTweet } from '../utils/api';\nimport { loadAsync } from './app';\n\nconst initialState: { [key: string]: tweet } = {};\n\nexport const tweetsSlice = createSlice({\n  name: 'tweets',\n  initialState,\n  reducers: {\n    load: (state, action: PayloadAction<{ [key: string]: tweet }>) => action.payload,\n    toggleLike: (state, action: PayloadAction<{id: string, hasLiked: Boolean, authedUser: string }>) => {\n      let tweet = state[action.payload.id];\n      action.payload.hasLiked? tweet.likes = tweet.likes.filter(u => u !== action.payload.authedUser) : tweet.likes.push(action.payload.authedUser)\n    },\n    add: (state, action: PayloadAction<tweet>) => {\n      state[action.payload.id] = action.payload;\n      if (action.payload.replyingTo) {\n        state[action.payload.replyingTo].replies.push(action.payload.id)\n      }\n    }\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loadAsync.fulfilled, (state, action) => action.payload.tweets);\n  },\n});\n\nexport const toggleLikeAsync = createAsyncThunk('tweets/toggleLike', async (info: {id: string, hasLiked: Boolean, authedUser: string }, thunkAPI) => {\n  thunkAPI.dispatch(tweetsSlice.actions.toggleLike(info))\n  const response = await saveLikeToggle(info).catch(e => {\n    thunkAPI.dispatch(tweetsSlice.actions.toggleLike(info))\n  });\n  return response\n});\n\nexport const addTweetAsync = createAsyncThunk('tweets/add', async (info: {text: string, author: string, replyingTo: string|undefined }, thunkAPI) => {\n  thunkAPI.dispatch(showLoading())\n  const response = await saveTweet(info);\n  thunkAPI.dispatch(tweetsSlice.actions.add(response))\n  thunkAPI.dispatch(hideLoading())\n  return response;\n});\n\nexport default tweetsSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { loadAsync } from './app';\n\nconst initialState: { [key: string]: user } = {};\n\nexport const usersSlice = createSlice({\n  name: 'users',\n  initialState,\n  reducers: {\n    load: (state, action: PayloadAction<{ [key: string]: user }>) => action.payload,\n  },\n  extraReducers: (builder) => {\n    builder.addCase(loadAsync.fulfilled, (state, action) => action.payload.users);\n  },\n\n});\n\n\nexport default usersSlice.reducer;\n","import { loadingBarReducer } from \"react-redux-loading-bar\";\nimport { appSlice, loadAsync } from \"./app\";\nimport { addTweetAsync, toggleLikeAsync, tweetsSlice } from \"./tweets\";\nimport { usersSlice } from \"./users\";\nimport { showLoading, hideLoading } from 'react-redux-loading-bar'\n\nexport const actions = {\n  app: {\n    ...appSlice.actions,\n    loadAsync,\n    showLoading,\n    hideLoading,\n  },\n  users: usersSlice.actions,\n  tweets: { ...tweetsSlice.actions, toggleLikeAsync, addTweetAsync },\n\n};\n\nexport const reducers = {\n  app: appSlice.reducer,\n  users: usersSlice.reducer,\n  tweets: tweetsSlice.reducer,\n  loadingBar: loadingBarReducer,\n}\n\nexport default reducers;\n","export function formatDate (timestamp) {\n  const d = new Date(timestamp)\n  const time = d.toLocaleTimeString('en-US')\n  return time.substr(0, 5) + time.slice(-2) + ' | ' + d.toLocaleDateString()\n}\n\nexport function formatTweet (tweet, author, authedUser, parentTweet) {\n  const { id, likes, replies, text, timestamp } = tweet\n  const { name, avatarURL } = author\n\n  return {\n    name,\n    id,\n    timestamp,\n    text,\n    avatar: avatarURL,\n    likes: likes.length,\n    replies: replies.length,\n    hasLiked: likes.includes(authedUser),\n    parent: !parentTweet ? null : {\n      author: parentTweet.author,\n      id: parentTweet.id,\n    }\n  }\n}","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Link, useHistory } from 'react-router-dom';\nimport { actions } from '../slices';\nimport { AppDispatch, RootState } from '../store';\nimport { formatDate, formatTweet } from '../utils/helpers';\n\nconst Tweet: React.FC<{ id: string }> = ({ id }) => {\n  const dispatch = useDispatch<AppDispatch>();\n  const history = useHistory()\n  const authedUser = useSelector((state: RootState) => state.app.authedUser)\n  const tweet = useSelector((state: RootState) => state.tweets[id])\n  const tweetAuthor = useSelector((state: RootState) => state.users[tweet.author])\n  const parentTweet = useSelector((state: RootState) => state.tweets[(tweet.replyingTo as string)])\n  const formattedTweet = formatTweet(tweet, tweetAuthor, authedUser, parentTweet)\n\n  const { name, avatar, timestamp, text, hasLiked, likes, replies, parent } = formattedTweet;\n\n  const handleLike = (e: React.MouseEvent<HTMLButtonElement>) => {\n    e.preventDefault()\n    dispatch(actions.tweets.toggleLike({id: tweet.id, hasLiked: formattedTweet.hasLiked, authedUser: authedUser as string }))\n  }\n\n  const toParent = (e: React.MouseEvent<HTMLButtonElement>, id: string) => {\n    e.preventDefault()\n    history.push(`/tweet/${id}`)\n  }\n\n  return (\n    <Link className='tweet' to={`/tweet/${id}`}>\n      <img\n        src={avatar}\n        alt={`Avatar of ${name}`}\n        className='avatar'\n      />\n      <div className='tweet-info'>\n        <div>\n          <span>{name}</span>\n          <div>{formatDate(timestamp)}</div>\n          {parent && (\n            <button className='replying-to' onClick={(e) => toParent(e, parent.id)}>\n              Replying to @{parent.author}\n            </button>\n          )}\n          <p>{text}</p>\n        </div>\n        <div className='tweet-icons'>\n          <svg className='tweet-icon' stroke=\"currentColor\" fill=\"currentColor\" version=\"1.2\" baseProfile=\"tiny\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M19.164 19.547c-1.641-2.5-3.669-3.285-6.164-3.484v1.437c0 .534-.208 1.036-.586 1.414-.756.756-2.077.751-2.823.005l-6.293-6.207c-.191-.189-.298-.444-.298-.713s.107-.524.298-.712l6.288-6.203c.754-.755 2.073-.756 2.829.001.377.378.585.88.585 1.414v1.704c4.619.933 8 4.997 8 9.796v1c0 .442-.29.832-.714.958-.095.027-.19.042-.286.042-.331 0-.646-.165-.836-.452zm-7.141-5.536c2.207.056 4.638.394 6.758 2.121-.768-3.216-3.477-5.702-6.893-6.08-.504-.056-.888-.052-.888-.052v-3.497l-5.576 5.496 5.576 5.5v-3.499l1.023.011z\"></path>\n          </svg>\n          <span>{replies !== 0 && replies}</span>\n          <button className='heart-button' onClick={handleLike}>\n            {hasLiked === true\n              ? <svg className='tweet-icon' stroke=\"#e0245e\" fill=\"#e0245e\" version=\"1\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M2.2 9.4c0 1.3.2 3.3 2 5.1 1.6 1.6 6.9 5.2 7.1 5.4.2.1.4.2.6.2s.4-.1.6-.2c.2-.2 5.5-3.7 7.1-5.4 1.8-1.8 2-3.8 2-5.1 0-3-2.4-5.4-5.4-5.4-1.6 0-3.2.9-4.2 2.3-1-1.4-2.6-2.3-4.4-2.3-2.9 0-5.4 2.4-5.4 5.4z\"></path>\n              </svg>\n              : <svg className='tweet-icon' stroke=\"currentColor\" fill=\"currentColor\" version=\"1.2\" baseProfile=\"tiny\" viewBox=\"0 0 24 24\" height=\"1em\" width=\"1em\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M12 20c-.195 0-.391-.057-.561-.172-.225-.151-5.508-3.73-7.146-5.371-1.831-1.831-2.043-3.777-2.043-5.082 0-2.964 2.411-5.375 5.375-5.375 1.802 0 3.398.891 4.375 2.256.977-1.365 2.573-2.256 4.375-2.256 2.964 0 5.375 2.411 5.375 5.375 0 1.305-.212 3.251-2.043 5.082-1.641 1.641-6.923 5.22-7.146 5.371-.17.115-.366.172-.561.172zm-4.375-14c-1.861 0-3.375 1.514-3.375 3.375 0 1.093.173 2.384 1.457 3.668 1.212 1.212 4.883 3.775 6.293 4.746 1.41-.971 5.081-3.534 6.293-4.746 1.284-1.284 1.457-2.575 1.457-3.668 0-1.861-1.514-3.375-3.375-3.375s-3.375 1.514-3.375 3.375c0 .552-.447 1-1 1s-1-.448-1-1c0-1.861-1.514-3.375-3.375-3.375z\"></path>\n              </svg>}\n          </button>\n          <span>{likes !== 0 && likes}</span>\n        </div>\n      </div>\n    </Link>\n  );\n}\n\nexport default Tweet;\n","import { useSelector } from 'react-redux';\nimport { RootState } from '../store';\nimport Tweet from './Tweet';\n\nfunction Dashboard() {\n  const tweetIds = useSelector((state: RootState) => Object.keys(state.tweets)\n    .sort((a, b) => state.tweets[b].timestamp - state.tweets[a].timestamp))\n\n  return (\n    <div>\n      <h3 className='center'>Your Timeline</h3>\n      <ul className='dashboard-list'>\n        {tweetIds.map(id => <li key={id}><Tweet id={id} /></li>)}\n      </ul>\n    </div>\n  );\n}\n\nexport default Dashboard;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { actions } from '../slices';\nimport { AppDispatch, RootState } from '../store';\n\nconst NewTweet: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const authedUser = useSelector((state: RootState) => state.app.authedUser)\n  const history = useHistory()\n  const [text, setText] = useState('')\n  const replyingTo = useParams<{ id: string | undefined }>().id;\n\n  const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value)\n  }\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault()\n    const author = authedUser as string;\n    await dispatch(actions.tweets.addTweetAsync({ text, author, replyingTo }))\n    setText('')\n    !replyingTo && history.push('/')\n  }\n\n  const tweetLeft = 280 - text.length\n\n  return (\n    <div>\n      <h3 className='center'>Compose new {replyingTo ? \"reply\" : \"Tweet\"}</h3>\n      <form className='new-tweet' onSubmit={handleSubmit}>\n        <textarea\n          placeholder=\"What's happening?\"\n          value={text}\n          onChange={handleChange}\n          className='textarea'\n          maxLength={280}\n          autoFocus\n        />\n        {tweetLeft <= 100 && (\n          <div className='tweet-length'>\n            {tweetLeft}\n          </div>\n        )}\n        <button\n          className='btn'\n          type='submit'\n          disabled={text === ''}>\n          Submit\n        </button>\n      </form>\n    </div>\n  )\n}\n\nexport default NewTweet;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst Navbar: React.FC = () => (\n  <nav className='nav'>\n    <ul>\n      <li>\n        <NavLink to='/' exact activeClassName='active'>\n          Home\n        </NavLink>\n      </li>\n      <li>\n        <NavLink to='/new' activeClassName='active'>\n          New Tweet\n        </NavLink>\n      </li>\n    </ul>\n  </nav>\n);\n\n\nexport default Navbar;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { RootState } from '../store';\nimport NewTweet from './NewTweet';\nimport Tweet from './Tweet';\n\nconst TweetPage: React.FC = () => {\n  const { id } = useParams<{ id: string}>();\n  const replies = useSelector((state: RootState) => state.tweets[id].replies)\n\n  return (\n    <div>\n      <Tweet id={id} />\n      <NewTweet />\n      {replies.length !== 0 && <h3 className='center'>Replies</h3>}\n      <ul>\n        {replies.map((replyId) => (\n          <li key={replyId}>\n            <Tweet id={replyId}/>\n          </li>\n        ))}\n      </ul>\n    </div>\n  )\n}\n\nexport default TweetPage;\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoadingBar from 'react-redux-loading-bar';\nimport { actions } from '../slices';\nimport { AppDispatch, RootState } from '../store';\nimport Dashboard from './Dashboard';\nimport NewTweet from './NewTweet';\nimport Navbar from './Navbar';\nimport TweetPage from './TweetPage';\n\nconst App: React.FC = () => {\n  const dispatch = useDispatch<AppDispatch>();\n  const state = useSelector((state: RootState) => state.app)\n\n  useEffect(() => {\n    dispatch(actions.app.loadAsync())\n  }, [dispatch])\n\n  return (\n    <Router>\n      <>\n        <LoadingBar />\n        <div className='container'>\n          <Navbar />\n          {!state.loading && <div>\n            <Route path='/' exact component={Dashboard} />\n            <Route path='/tweet/:id' component={TweetPage} />\n            <Route path='/new' component={NewTweet} />\n          </div>}\n        </div>\n      </>\n    </Router>\n  );\n}\n\nexport default App;\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit';\nimport reducers from './slices';\n\nexport const store = configureStore({\n  reducer: reducers\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppThunk<ReturnType = void> = ThunkAction<\n  ReturnType,\n  RootState,\n  unknown,\n  Action<string>\n>;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}